
[x] edges inside the blocks must be curved
[x] each block must have a gray circle below it
    [x] - may the circle should contain also it's cut-vertexes
    [] - may the circle should be bigger as it's radius (dimension * 0.8)
[x] remove the aliasing of the path curves
[x] zoom not over 2x
[x] add the block descriptions on mouse over
[] tuning the color & size of the nodes description
[x] orders the nodes within the blocks to have the biggest ones in the middle and the others around
[x] increase the size of the cones

------------------------------------------------------------------------------------------------------------------------

[x] query dove si trova questo vertice?
[x] mostrami questi due nodi e shortest path

------------------------------------------------------------------------------------------------------------------------

[x] allowing a zoom in relation of the display size that is drawing the graph
[x] review the drawing algorithm of the blocks when you are drawing a very little subset of the real set of the nodes
[] better animation for the shortest path
[] C++  ==>  name of the nodes should be the same of the real name of the node
[x] C++  ==>  take just only the nodes that have an higher degree
[x] C++  ==>  if exists a json file of the current graph send to the client that file and then decompose the gml file for ensure the possibility to query the graph
[x] introduce the clean query button

------------------------------------------------------------------------------------------------------------------------

[x] the edges of the shortest path should be curved
[x] clean the screen each time that you are drawing a new graph
[x] neighbours of a certain node
[x] possibility of querying for multiple nodes (hiligthed set)
[] circle map for connected components
[x] cutVertex hilighted

------------------------------------------------------------------------------------------------------------------------

[x] color edges in a shortestpath with the same color scale
    maybe is better a double ended color map
[] new drawing algorithm for the node in the different connected components
    [] maybe I have to modify the jSON in the c++ because I have to intert all the informations in merit of the edges of the blocks
[x] understanding when nodes are not overlapping

------------------------------------------------------------------------------------------------------------------------

[X] resizing una componente biconnessa con n nodi ed una componenete bi connessa con due nodi hanno la stessa dimensione
[] se una componente ha pochi nodi, va disegnata per intero, cutvertex sul cerchio e random al centro
[] chiesto uno shpath se appartiene a due cc differenti segnala in rosso i due nodi in due cc differenti
[x] cerchi sfondo bianco e bordo blue
